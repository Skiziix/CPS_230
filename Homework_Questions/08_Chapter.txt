Multiple Choice & True/False:
    1.) c
    2.) c 
    3.) a 
    4.) c 
    5.) b
    6.) a - (c) An enum class has a method called ordinal to return the position of a constant
    7.) d
    8.) d - (b) Case expressions can't use the FQN of an enum type
    9.) c 
    10.) b - (a) The finalize method is the method of a class ran on garbage collection
    11.) b
    12.) False
    13.) False
    14.) True
    15.) False
    16.) True - (False) You cannot declare an enum type inside a method
    17.) True
    18.) True

Find the Error:
    1.) A static method cannot mutate non-static fields.
    2.) Case statements cannot use FQNs of enums.

Algorithm Workbench:
    1.)
        [a] - public String toString() {
                String representation = "Radius: " + this.getRadius() + "\nArea: " + this.getArea();
                return representation;
              }

        [b] - public boolean equals(Circle circle) {
                return this.getRadius() == circle.getRadius() ? True : False;
              }

        [c] - public boolean greaterThan(Circle circle) {
                return this.getArea() > circle.getArea() ? True : False;
              }

Short Answer:
    1.) Access non-static members.
    2.) They can be called without instantiating a class.
    3.) A class object is passed by reference, while a variable is passed by value
    4.) The automatic equals method compares the memory address that is referenced.
    5.) It means that a class has another class as a member variable type.
    6.) If you attempt to call a method using a reference variable set to null the program crashes.
    7.) It's unadvisable unless it is a string object.